<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Westwind.Globalization.Web</name>
    </assembly>
    <members>
        <member name="T:Westwind.Globalization.Web.Administration.LocalizationConfigurationsManager">
            <summary>
            This class manages saving configuration settings so they can be easily restored
            in LocalizationsConfigurations.json in the Web root folder
            </summary>
            <remarks>
            Assumes Web application has rights to read/write to disk in the Web root in
            order to save settings.
            </remarks>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationConfigurationsManager.StoreConfiguration(System.String,Westwind.Globalization.DbResourceConfiguration)">
            <summary>
            Saves the current configuration settings
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:Westwind.Globalization.Web.Administration.LocalizationService">
            <summary>
            Localization form Admin service that provides JSON data for 
            the admin interface.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Westwind.Globalization.Web.Administration.LocalizationService.GetAllResourcesForResourceGrid(System.String)" -->
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.GetResourceSets">
            <summary>
            Returns a list of all ResourceSets
            </summary>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.IsLocalizationTable">
            <summary>
            checks to see if the localiztion table exists
            </summary>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.GetAllLocaleIds(System.String)">
            <summary>
            Returns a list of the all the LocaleIds used in a given resource set
            </summary>
            <param name="resourceSet"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.GetResourceString(System.Object)">
            <summary>
            Returns a resource string based on  resourceId, resourceSet,cultureName
            </summary>
            <param name="parm"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.GetResourceItems(System.Object)">
            <summary>
            Returns all resources for a given Resource ID. Pass resourceId, and resourceSet
            in an object map.
            </summary>
            <param name="parm"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.GetResourceItem(System.Object)">
            <summary>
            Returns an individual ResourceIdtem for a resource ID and specific culture.
            pass resourceId, resourceSet, cultureName in an object map.
            </summary>
            <param name="parm"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.GetResourceStrings(System.String,System.String)">
            <summary>
            Gets all resources for a given ResourceId for all cultures from
            a resource set.
            </summary>
            <param name="resourceId"></param>
            <param name="resourceSet"></param>
            <returns>Returns an array of Key/Value objects to the client</returns>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.UpdateResourceString(System.Object)">
            <summary>
            Adds or updates a resource. Pass value, resourceId,resourceSet,localeId,comment
            as a map.
            </summary>
            <param name="parm"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.UpdateComment(System.Object)">
            <summary>
            Updates just a comment for an individual resourceId. Pass resourceId, resourceSet and localeId
            in a map.
            </summary>
            <param name="parm"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.UpdateResource(Westwind.Globalization.ResourceItem)">
            <summary>
            Updates or Adds a resource if it doesn't exist
            </summary>
            <param name="resource"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.UploadResource">
            <summary>
            Updates or adds a binary file resource based on form variables.
            ResourceId,ResourceSet,LocaleId and a single file upload.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.DeleteResource(System.Object)">
            <summary>
            Delete an individual resource. Pass resourceId, resourceSet and localeId 
            as a map. If localeId is null all the resources are deleted.
            </summary>
            <param name="parm"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.RenameResource(System.Object)">
            <summary>
            Renames a resource key to a new name.
            
            Requires a JSON object with the following properties:
            {
            }
            
            
            </summary>
            <param name="parms"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.RenameResourceProperty(System.String,System.String,System.String)">
            <summary>
            Renames all resource keys that match a property (ie. lblName.Text, lblName.ToolTip)
            at once. This is useful if you decide to rename a meta:resourcekey in the ASP.NET
            markup.
            </summary>
            <param name="Property">Original property prefix</param>
            <param name="NewProperty">New Property prefix</param>
            <param name="ResourceSet">The resourceset it applies to</param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.DeleteResourceSet(System.String)">
            <summary>
            Deletes an entire resource set.
            </summary>
            <param name="resourceSet"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.RenameResourceSet(System.String,System.String)">
            <summary>
            Renames a resource set to a new name.
            </summary>
            <param name="oldResourceSet"></param>
            <param name="newResourceSet"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.ReloadResources">
            <summary>
            Clears the resource cache. Works only if using one of the Westwind
            ASP.NET resource providers or managers.
            </summary>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.Backup">
            <summary>
            Backs up the resource table into a new table with the same name + _backup
            </summary>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.CreateTable">
            <summary>
            Creates a new localization table as defined int he configuration if it doesn't
            exist. If the table exists an error is returned.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.IsRtl(System.String)">
            <summary>
            Determines whether a locale is an RTL language
            </summary>
            <param name="localeId"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.CreateClass(System.Object)">
            <summary>
            Creates .NET strongly typed class from the resources. Pass:
            fileName, namespace, classType, resourceSets as a map.
            </summary>
            <remarks>
            Requires that the application has rights to write output into
            the location specified by the filename.
            </remarks>
            <param name="parms"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.ExportResxResources(System.Object)">
            <summary>
            Export resources from database to Resx files.
            </summary>
            <param name="parms"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.ImportResxResources(System.String)">
            <summary>
            Import resources from Resx files into database
            </summary>
            <param name="inputBasePath"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.Web.Administration.LocalizationService.GetLocalizationInfo">
            <summary>
            Returns configuration information so the UI can display this info on the configuration
            page.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Westwind.Globalization.Web.Administration.ResourceString">
            <summary>
            Class that holds a resource value including the locale id
            </summary>
        </member>
        <member name="T:Westwind.Globalization.Web.Administration.ResourceItemEx">
            <summary>
            Class that holds a resource item with all of its detail
            information.
            </summary>
        </member>
        <member name="T:Westwind.Globalization.Web.Resources.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.Can_t_save_resource__Invalid_culture_id_passed">
            <summary>
              Looks up a localized string similar to Can&apos;t save resource: Invalid culture id passed: {0}.
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.Client_Id_and_Client_Secret_must_be_provided">
            <summary>
              Looks up a localized string similar to Client Id and Client Secret must be provided..
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.Client_Id_and_Client_Secret_must_be_provided_">
            <summary>
              Looks up a localized string similar to Client Id and Client Secret must be provided..
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.ConnectionFailed">
            <summary>
              Looks up a localized string similar to Connection failed: .
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.ConnectionStringForResourcesIsNotConfigure">
            <summary>
              Looks up a localized string similar to Connection string for resources is not configured.
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.EditPageResources">
            <summary>
              Looks up a localized string similar to Edit Page Resources.
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.InvalidSearchResult">
            <summary>
              Looks up a localized string similar to Invalid search result..
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.LocalizationOptions">
            <summary>
              Looks up a localized string similar to Localization Options.
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.LocalizationTable_Localization_Table_exists_already">
            <summary>
              Looks up a localized string similar to Localization Table exists already.
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.No_matching_Recordset_found">
            <summary>
              Looks up a localized string similar to No matching Recordset found..
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.NoResourceIdSpecifiedCantAddResource">
            <summary>
              Looks up a localized string similar to No ResourceId specified. Can&apos;t add resource.
            </summary>
        </member>
        <member name="P:Westwind.Globalization.Web.Resources.Resources.ShowLocalizationIcons">
            <summary>
              Looks up a localized string similar to Show Localization Icons.
            </summary>
        </member>
        <member name="T:Westwind.Globalization.DbResourceProvider">
            <summary>
            The DbResourceProvider class is an ASP.NET Resource Provider implementation
            that retrieves its resources from a database. It works in conjunction with a
            DbResourceManager object and so uses standard .NET Resource mechanisms to 
            retrieve its data. The provider should be fairly efficient and other than
            initial load time standard .NET resource caching is used to hold resource sets
            in memory.
            
            The Resource Provider class provides the base interface for accessing resources.
            This provider interface handles loading resources, caching them (using standard
            Resource Manager functionality) and allowing access to resources via GetObject.
            
            This provider supports global and local resources, explicit expressions
            as well as implicit expressions (IImplicitResourceProvider).
            
            There's also a design time implementation to provide Generate LocalResources
            support from ASP.NET Web Form designer.
            </summary>
        </member>
        <member name="F:Westwind.Globalization.DbResourceProvider._className">
            <summary>
            
            </summary>
        </member>
        <member name="F:Westwind.Globalization.DbResourceProvider.ProviderLoaded">
            <summary>
            Flag that can be read to see if the resource provider is loaded
            </summary>
        </member>
        <member name="M:Westwind.Globalization.DbResourceProvider.#ctor(System.String,System.String)">
            <summary>
            Default constructor - only captures the parameter values
            </summary>
            <param name="virtualPath"></param>
            <param name="classname"></param>
        </member>
        <member name="P:Westwind.Globalization.DbResourceProvider.ResourceManager">
            <summary>
            IResourceProvider interface - required to provide an instance to an
            ResourceManager object.
            
            Note that the resource manager is not tied to a specific culture by
            default. The Provider uses the UiCulture without explicitly passing
            culture info.
            </summary>
        </member>
        <member name="M:Westwind.Globalization.DbResourceProvider.ClearResourceCache">
            <summary>
            Releases all resources and forces resources to be reloaded
            from storage on the next GetResourceSet
            </summary>
        </member>
        <member name="M:Westwind.Globalization.DbResourceProvider.System#Web#Compilation#IResourceProvider#GetObject(System.String,System.Globalization.CultureInfo)">
            <summary>
            The main method to retrieve a specific resource key. The provider
            internally handles resource fallback based on the ResourceSet implementation.
            </summary>
            <param name="resourceKey"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="P:Westwind.Globalization.DbResourceProvider.ResourceReader">
            <summary>
            Required instance of the ResourceReader for this provider. Part of
            the IResourceProvider interface. The reader is responsible for feeding
            the Resource data from a ResourceSet. The interface basically walks
            an enumerable interface by ResourceId.
            </summary>
        </member>
        <member name="M:Westwind.Globalization.DbResourceProvider.System#Web#Compilation#IImplicitResourceProvider#GetObject(System.Web.Compilation.ImplicitResourceKey,System.Globalization.CultureInfo)">
            <summary>
            Implicit ResourceKey GetMethod that is called off meta:Resource key values.
            Note that if a value is missing at compile time this method is never called
            at runtime as the key isn't added to the Implicit key dictionary
            </summary>
            <param name="implicitKey"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.DbResourceProvider.ConstructFullKey(System.Web.Compilation.ImplicitResourceKey)">
            <summary>
            Routine that generates a full resource key string from
            an Implicit Resource Key value
            </summary>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.DbResourceProvider.System#Web#Compilation#IImplicitResourceProvider#GetImplicitResourceKeys(System.String)">
            <summary>
            Retrieves all keys for from the resource store that match the given key prefix.
            The value here is generally a property name (or resourceId) and this routine
            retrieves all matching property values.
            
            So, lnkSubmit as the prefix finds lnkSubmit.Text, lnkSubmit.ToolTip and
            returns both of those keys.
            </summary>
            <param name="keyPrefix"></param>
            <returns></returns>
        </member>
        <member name="T:Westwind.Globalization.DbResourceProviderFactory">
            <summary>
            Provider Factory class that needs to be set in web.config in order for ASP.NET to instantiate
            this class for all resource related tasks.
            </summary>
        </member>
        <member name="M:Westwind.Globalization.DbResourceProviderFactory.CreateGlobalResourceProvider(System.String)">
            <summary>
            Core Factory method that returns an instance of our DbResourceProvider 
            database Resource provider for Global Resources. This method gets
            passed simple a ResourceSet which is equivalent to a Resource file in
            Resx and here maps to the ResourceSet id in the database.
            </summary>
            <param name="classname"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.DbResourceProviderFactory.CreateLocalResourceProvider(System.String)">
            <summary>
            Creates a local resource provider for a given Page or Template Resource.
            
            We'll create local resources by application relative names. This routine
            gets passed a full virtual path to the page or template control and we'll
            strip off the virtual and use only the virtual relative path. 
            
            So: /myapp/test.aspx becomes test.aspx and
                /myapp/subdir/test.aspx becomes subdir/test.aspx
            
            for our ResourceSet naming of local resources. The provider is 
            created with this ResourceSet name.
            </summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="T:Westwind.Globalization.DbSimpleResourceProvider">
            <summary>
            Implementation of a very simple database Resource Provider. This implementation
            is self contained and doesn't use a custom ResourceManager. Instead it
            talks directly to the data resoure business layer (DbResourceDataManager).
            
            Dependencies:
            DbResourceDataManager
            DbResourceConfiguration
            
            You can replace those depencies (marked below in code) with your own data access
            management. The two dependcies manage all data access as well as configuration 
            management via web.config configuration section. It's easy to remove these
            and instead use custom data access code of your choice.
            </summary>
        </member>
        <member name="F:Westwind.Globalization.DbSimpleResourceProvider._ResourceSetName">
            <summary>
            Keep track of the 'className' passed by ASP.NET
            which is the ResourceSetId in the database.
            </summary>
        </member>
        <member name="F:Westwind.Globalization.DbSimpleResourceProvider._resourceCache">
            <summary>
            Cache for each culture of this ResourceSet. Once
            loaded we just cache the resources.
            </summary>
        </member>
        <member name="F:Westwind.Globalization.DbSimpleResourceProvider._SyncLock">
            <summary>
            Critical section for loading Resource Cache safely
            </summary>
        </member>
        <member name="M:Westwind.Globalization.DbSimpleResourceProvider.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="virtualPath">The virtual path to the Web application</param>
            <param name="resourceSet">Name of the resource set to load</param>
        </member>
        <member name="M:Westwind.Globalization.DbSimpleResourceProvider.GetResourceCache(System.String)">
            <summary>
            Manages caching of the Resource Sets. Once loaded the values are loaded from the 
            cache only.
            </summary>
            <param name="cultureName"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.DbSimpleResourceProvider.ClearResourceCache">
            <summary>
            Clears out the resource cache which forces all resources to be reloaded from
            the database.
            
            This is never actually called as far as I can tell
            </summary>
        </member>
        <member name="M:Westwind.Globalization.DbSimpleResourceProvider.System#Web#Compilation#IResourceProvider#GetObject(System.String,System.Globalization.CultureInfo)">
            <summary>
            The main worker method that retrieves a resource key for a given culture
            from a ResourceSet.
            </summary>
            <param name="resourceKey"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.DbSimpleResourceProvider.GetObjectInternal(System.String,System.String)">
            <summary>
            Internal lookup method that handles retrieving a resource
            by its resource id and culture. Realistically this method
            is always called with the culture being null or empty
            but the routine handles resource fallback in case the
            code is manually called.
            </summary>
            <param name="resourceKey"></param>
            <param name="cultureName"></param>
            <returns></returns>
        </member>
        <member name="P:Westwind.Globalization.DbSimpleResourceProvider.ResourceReader">
            <summary>
            The Resource Reader is used parse over the resource collection
            that the ResourceSet contains. It's basically an IEnumarable interface
            implementation and it's what's used to retrieve the actual keys
            </summary>
        </member>
        <member name="T:Westwind.Globalization.DbSimpleResourceProviderFactory">
            <summary>
            Provider factory that instantiates the individual provider. The provider
            passes a 'classname' which is the ResourceSet id or how a resource is identified.
            For global resources it's the name of hte resource file, for local resources
            it's the full Web relative virtual path
            </summary>
        </member>
        <member name="M:Westwind.Globalization.DbSimpleResourceProviderFactory.CreateGlobalResourceProvider(System.String)">
            <summary>
            ASP.NET sets up provides the global resource name which is the 
            resource ResX file (without any extensions). This will become
            our ResourceSet id. ie. Resource.resx becomes "Resources"
            </summary>
            <param name="classname"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.DbSimpleResourceProviderFactory.CreateLocalResourceProvider(System.String)">
            <summary>
            ASP.NET passes the full page virtual path (/MyApp/subdir/test.aspx) wich is
            the effective ResourceSet id. We'll store only an application relative path
            (subdir/test.aspx) by stripping off the base path.
            </summary>
            <param name="virtualPath"></param>
            <returns></returns>
        </member>
        <member name="T:Westwind.Globalization.DbSimpleResourceReader">
            <summary>
            Required simple IResourceReader implementation. A ResourceReader
            is little more than an Enumeration interface that allows 
            parsing through the Resources in a Resource Set which
            is passed in the constructor.
            </summary>
        </member>
        <member name="T:Westwind.Globalization.DbResourceControl">
            <summary>
            The DbResourceControl class provides Page level Resource Administration
            support to localizable ASP.NET pages. This control allows bringing up
            the localization Administration Form that shows all localizable resources
            for editing and translation.
            
            The control also provides the ability to show icons next to each control
            to jump directly to the appropriate control in the Admin form. The control
            can automatically detect Page, Control, Master Page (any template control)
            resources and jump directly to the appropriate resource entry if it exists.
            
            Note the control shows all Localizable controls, but there's no guarantee
            that the controls are actually hooked up for localization in the ASP.NET
            page, control, master etc. resource. You need to ensure either implicit
            or explicit resources are actually configured on the pages.
            
            For the control to work it merely should be placed on any form that is
            localizable. Display of the control is globally controlled via the 
            DbResourceConfiguration object (and the DbResourceConfigurationSection in
            Web.config by default) which allows toggling display of the control in the UI
            and toggling the display of the individual resource icons.
            
            The Administration form relies on the availability of the Administration
            form (LocalizeForm.aspx) and a configuration entry that points at this
            control. This form must be distributed with your Web application.
            </summary>
        </member>
        <member name="M:Westwind.Globalization.DbResourceControl.#ctor">
            <summary>
            The default control constructor.
            </summary>
        </member>
        <member name="M:Westwind.Globalization.DbResourceControl.Page_PreRender(System.Object,System.EventArgs)">
            <summary>
            Hook to Page Pre-Render to allow injecting controls at runtime
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Westwind.Globalization.DbResourceControl.GetAllLocalizableControls(System.Web.UI.Control)">
            <summary>
            Goes through the form and returns a list of all control on a form
            that are marked as [Localizable]
            </summary>
            <param name="control">Base container to start the parsing from. Usually this will be the current form but could be a control.</param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.DbResourceControl.GetAllLocalizableControls(System.Web.UI.Control,System.Collections.Generic.List{Westwind.Globalization.LocalizableProperty})">
            <summary>
            Goes through the form and returns a list of all control on a form
            that are marked as [Localizable]
            
            This internal method does all the work and drills into child containers
            recursively.
            </summary>
            <param name="control"></param>
            <param name="ResourceList"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.DbResourceControl.GetAllLocalizableControls(System.Web.UI.Control,System.Collections.Generic.List{Westwind.Globalization.LocalizableProperty},System.Boolean)">
            <summary>
            Goes through the form and returns a list of all control on a form
            that are marked as [Localizable]
            
            This internal method does all the work and drills into child containers
            recursively.
            </summary>
            <param name="control">The control at which to start parsing usually Page</param>
            <param name="ResourceList">An instance of the resource list. Pass null to create</param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.DbResourceControl.AddLocalizationIcons(System.Web.UI.Control,System.Boolean)">
            <summary>
            This method is responsible for showing localization icons next to every control
            that has localizable properties.
            
            The icons are resource based and also display the control's ID. Note icons are
            placed only next to any controls that are marked as [Localizable]. Some contained
            controls like GridVIew/DataGrid Columns are not marked as [Localizable] yet
            the ASP.NET designer creates implicit resources for them anyway - these controls
            will not show icons.
            </summary>
            <param name="control"></param>
            <param name="TopLevel"></param>
        </member>
        <member name="T:Westwind.Globalization.LocalizableProperty">
            <summary>
            simple object that holds the value structure of each
            saved resource item on a form
            </summary>
        </member>
        <member name="T:Westwind.Globalization.JavaScriptResourceHandler">
            <summary>
            Http Handler that returns ASP.NET Local and Global Resources as JavaScript
            objects. Supports both plain Resx Resources as well as DbResourceProvider 
            driven resources.
            
            Objects are generated in the form of:
            
            &lt;&lt;code lang="JavaScript"&gt;&gt;var localRes  = {
               BackupFailed: "Backup was not completed",
               Loading: "Loading"
            );&lt;&lt;/code&gt;&gt;
            
            where the resource key becomes the property name with a string value.
            
            The handler is driven through query string variables determines which 
            resources are returned:
            
            ResourceSet      -  Examples: "resources" (global), "admin/somepage.aspx" "default.aspx" (local)
            LocaleId         -  Examples: "de-de","de",""  (empty=invariant)
            ResourceType     -  Resx,ResDb
            IncludeControls  -  if non-blank includes control values (. in name)
            VarName          -  name of hte variable generated - if omitted localRes or globalRes is created.    
            ResourceMode -  Flag required to find Resx resources on disk 0 - Local 1 - global 2 - plain resx
            
            Resources retrieved are aggregated for the locale Id (ie. de-de returns 
            de-de,de and invariant) whichever matches first.
            </summary>
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.SerializeResourceDictionary(System.Collections.Generic.Dictionary{System.String,System.Object},System.String)">
            <summary>
            Generates the actual JavaScript object map string makes up the
            handler's result content.
            </summary>
            <param name="resxDict"></param>
            <param name="varname"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.SendErrorResponse(System.String)">
            <summary>
            Returns an error response to the client. Generates a 404 error
            </summary>
            <param name="Message">Error message to display</param>
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.SendTextOutput(System.String,System.String)">
            <summary>
            Writes text output to server using UTF-8 encoding and GZip encoding
            if supported by the client
            </summary>
            <param name="text"></param>
            <param name="useGZip"></param>
            <param name="contentType"></param>
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.RegisterJavaScriptGlobalResources(System.Web.UI.Control,System.String,System.String,System.String,Westwind.Globalization.ResourceProviderTypes)">
            <summary>
            Inserts global resources into the current page.
            </summary>
            <param name="control">A control (typically) page needed to embed into the page</param>
            <param name="resourceSet">Name of the resourceSet to load</param>
            <param name="localeId">The Locale for which to load resources. Normalized from most specific to Invariant</param>
            <param name="varName">Name of the variable generated</param>
            <param name="resourceType">Resx or DbResourceProvider (database)</param>
            <param name="includeControls">Determines whether control ids are included</param>
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.RegisterJavaScriptGlobalResources(System.Web.UI.Control,System.String,System.String)">
            <summary>
            Embed global JavaScript resources into the page.
            
            This version returns resources of the active Resx or DB Resource Provider
            and includes no controls and creates a variable named "globalRes"
            and uses the page's current UI culture
            </summary>
            <param name="control"></param>
            <param name="resourceSet"></param>       
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.RegisterJavaScriptLocalResources(System.Web.UI.Control,System.String,System.String,System.String,Westwind.Globalization.ResourceProviderTypes,System.Boolean)">
            <summary>
            Inserts local resources into the current page.
            </summary>
            <param name="control">A control (typically) page needed to embed into the page</param>
            <param name="resourceSet">Name of the resourceSet to load</param>
            <param name="localeId">The Locale for which to load resources. Normalized from most specific to Invariant</param>
            <param name="varName">Name of the variable generated</param>
            <param name="resourceType">Resx or DbResourceProvider (database)</param>
            <param name="includeControls">Determines whether control ids are included</param>
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.RegisterJavaScriptLocalResources(System.Web.UI.Control,System.String)">
            <summary>
            Embed global JavaScript resources into the page.
            
            This version returns resources of the active Resx or DB Resource Provider,
            includes no controls and uses the CurrentUICulture's locale id
            </summary>
            <param name="control">A control or page instance required to </param>
            <param name="varName">Name of the JavaScript object variable created</param>        
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.GetJavaScriptGlobalResourcesUrl(System.String,System.String,System.String,Westwind.Globalization.ResourceProviderTypes)">
            <summary>
            Returns a URL to the JavaScriptResourceHandler.axd handler that retrieves
            normalized resources for a given resource set and localeId and creates
            a JavaScript object with the name specified.
            
            This function returns only the URL - you're responsible for embedding
            the URL into the page as a script tag to actually load the resources.
            </summary>
            <param name="varName"></param>
            <param name="resourceSet"></param>
            <param name="localeId"></param>
            <param name="resourceType"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.GetJavaScriptGlobalResourcesUrl(System.String,System.String)">
            <summary>
            Returns a URL to the JavaScriptResourceHandler.axd handler that retrieves
            normalized resources for a given resource set and localeId and creates
            a JavaScript object with the name specified.
            
            This version assumes the current UI Culture and auto-detects the
            provider type (Resx or DbRes) currently active.
            </summary>
            <param name="varName"></param>
            <param name="resourceSet"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.GetJavaScriptLocalResourcesUrl(System.String,System.String,System.String,Westwind.Globalization.ResourceProviderTypes,System.Boolean)">
            <summary>
            Inserts local resources into the current page.
            </summary>
            <param name="control">A control (typically) page needed to embed into the page</param>
            <param name="resourceSet">Name of the resourceSet to load</param>
            <param name="localeId">The Locale for which to load resources. Normalized from most specific to Invariant</param>
            <param name="varName">Name of the variable generated</param>
            <param name="resourceType">Resx or DbResourceProvider (database)</param>
            <param name="includeControls">Determines whether control ids are included</param>
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.GetJavaScriptLocalResourcesUrl(System.String,System.Boolean)">
            <summary>
            Returns a URL to embed local resources into the page via JavaScriptResourceHandler.axd. 
            This method returns only a URL - you're responsible for embedding the script tag into the page
            to actually load the resources.
            
            This version assumes the local resource set for the current request/page and autodetected
            resources (resdb or resx). It also uses the CurrentUICulture as the locale.
            </summary>
            <param name="varName">The name of the JavaScript variable to create</param>        
            <param name="includeControls"></param>
            <returns></returns>
        </member>
        <member name="M:Westwind.Globalization.JavaScriptResourceHandler.GetJavaScriptResourcesUrl(System.String,System.String,System.String,Westwind.Globalization.ResourceProviderTypes)">
            <summary>
            Returns a standard Resx resource based on it's . delimited resourceset name
            </summary>
            <param name="varName">The name of the JavaScript variable to create</param>
            <param name="resourceSet">The name of the resource set
            
            Example:
            CodePasteMvc.Resources.Resources  (~/Resources/Resources.resx in CodePasteMvc project)
            </param>
            <param name="localeId">IETF locale id (2 or 4 en or en-US or empty)</param>
            <param name="resourceType">ResDb or ResX</param>
            <returns></returns>
        </member>
        <member name="T:Westwind.Globalization.ResourceProviderTypes">
            <summary>
            Determines the resource provider type used
            to retrieve resources.
            
            Note only applies to the stock ResX provider
            or the DbResourceProviders of this assembly.
            Other custom resource providers are not supported.
            </summary>
        </member>
    </members>
</doc>
